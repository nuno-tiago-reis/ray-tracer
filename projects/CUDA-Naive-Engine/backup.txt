		// If max depth wasn't reached yet
		if(depth > 0)	{

			// If the Object Hit is reflective
			if(specularConstant > 0.0f) {

				// Calculate the Reflected Rays Direction
				float3 reflectedDirection = reflect(ray.direction, hitRecord.normal);

				Ray reflectedRay(hitRecord.point + reflectedDirection * epsilon, reflectedDirection);

				// Cast the Reflected Ray
				hitRecord.color += RayCast(	reflectedRay, 
											trianglePositionsArray,
											triangleNormalsArray, 
											triangleTotal, 
											lightTotal, 
											depth-1, 
											refractionIndex) * 1.50f;
			}

			// If the Object Hit is translucid
			if(refractionConstant > 0.0f) {

				float newRefractionIndex;

				if(refractionIndex == 1.0f)
					newRefractionIndex = 1.50f;
				else
					newRefractionIndex = 1.0f;

				// Calculate the Refracted Rays Direction
				float3 refractedDirection = refract(ray.direction, hitRecord.normal, refractionIndex / newRefractionIndex);

				Ray refractedRay(hitRecord.point + refractedDirection * epsilon, refractedDirection);

				// Cast the Refracted Ray
				if( false /*length(refractedDirection) > 0.0f*/) {

					hitRecord.color += RayCast(	refractedRay, 
												trianglePositionsArray,
												triangleNormalsArray, 
												triangleTotal, 
												lightTotal, 
												depth-1, 
												newRefractionIndex) * 1.50f;
				}
			}
		}
		
		